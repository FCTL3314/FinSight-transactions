FROM golang:1.24.3-alpine AS builder

RUN apk add --no-cache git

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o app ./cmd/api

FROM alpine:latest

ENV GOPATH=/go
ENV PATH=$GOPATH/bin:/usr/local/go/bin:$PATH

RUN apk add --no-cache bash ca-certificates make go curl \
    && go install github.com/pressly/goose/v3/cmd/goose@latest \
    && apk del go

RUN adduser -D -g '' appuser

WORKDIR /app

COPY --from=builder /app/app .
COPY .env /app/.env
COPY config.yml /app/config.yml
COPY docker/prod/scripts/entrypoint.sh /app/entrypoint.sh
COPY Makefile /app/Makefile
COPY migrations /app/migrations

RUN chmod +x /app/entrypoint.sh

USER appuser

EXPOSE 8080

ENTRYPOINT ["/app/entrypoint.sh"]